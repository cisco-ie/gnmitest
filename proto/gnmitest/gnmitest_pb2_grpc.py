# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import github.com.openconfig.gnmitest.proto.report.report_pb2 as github_dot_com_dot_openconfig_dot_gnmitest_dot_proto_dot_report_dot_report__pb2
import github.com.openconfig.gnmitest.proto.suite.suite_pb2 as github_dot_com_dot_openconfig_dot_gnmitest_dot_proto_dot_suite_dot_suite__pb2


class GNMITestStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Run = channel.unary_unary(
        '/gnmitest.GNMITest/Run',
        request_serializer=github_dot_com_dot_openconfig_dot_gnmitest_dot_proto_dot_suite_dot_suite__pb2.Suite.SerializeToString,
        response_deserializer=github_dot_com_dot_openconfig_dot_gnmitest_dot_proto_dot_report_dot_report__pb2.Report.FromString,
        )


class GNMITestServicer(object):

  def Run(self, request, context):
    """Run runs the given Suite proto and returns Report proto.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GNMITestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Run': grpc.unary_unary_rpc_method_handler(
          servicer.Run,
          request_deserializer=github_dot_com_dot_openconfig_dot_gnmitest_dot_proto_dot_suite_dot_suite__pb2.Suite.FromString,
          response_serializer=github_dot_com_dot_openconfig_dot_gnmitest_dot_proto_dot_report_dot_report__pb2.Report.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gnmitest.GNMITest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
